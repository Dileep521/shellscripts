Shell : 

The shell provides you with an interface to the UNIX system.

It gathers input from you and executes programs based on that input. 

When a program finishes executing, it displays that program's output.

A shell is an environment in which we can run our commands, programs, and shell scripts. 

There are different flavors of shells, just as there are different flavors of operating systems. 

Each flavor of shell has its own set of recognized commands and functions

DOS = Command.com
Windows3.1/windows NT 3.x = program manager
Windows 95/98/ME/NT4/2000/XP = Windows Explorer

Types of Shell : 

K-Shell David Korn (not free)

C-Shell (Based on C-programming Language)

Bash = Bourne Again Shell.


#!/bin/sh
cd /home/ganesh/logfiles
rm program.log.6
mv program.log.5 program.log.6
mv program.log.4 program.log.5
mv program.log.3 program.log.4
mv program.log.2 program.log.3
mv program.log.1 program.log.2
mv program.log   program.log.1

#!/bin/bash
pwd
ls -c
date

#!/bin/bash
echo -n please enter your name:
read name
echo Hello $name How are you ?

#!/bin/bash
echo -n "please enter your name: "
read name
echo Hello $name.

touch askname ; echo ganesh > askname

ls userlist.txt xyz  > file 2>errors

ls userlist.txt xyz  > file 2>&1

============================================

sleep 1000

sleep 1000&



Program : 1

#
#	First, all possible users.  These are found in the file "/etc/passwd"
#
echo "Number of possible users on the system: \c"
cat /etc/passwd | wc -l

#
#	Next, all users currently logged in (using "who")
#
echo "Number of users logged onto the system: \c"
who | wc -l

#
#	Finally, the number of running processes (using "ps -e")
#
echo "Total number of processes running:      \c"
ps -e | wc -l


program : 2

#
#	First, the user's name
#
echo "Please enter your name: \c"
read name
echo Name: $name > details.out

#
#	Next, the user's address
#
echo "Please enter your address: \c"
read address
echo Address: $address >> details.out		# note: APPENDING!

#
#	Next, the user's phone number
#
echo "Please enter your phone number: \c"
read phone
echo Phone: $phone >> details.out

#
#	Finally, display the message about the filename
#
echo Thank you.  The details have been stored in the file \"details.out\"



=============================================

Special Characters :

&   *   ?  []  < > |  ( )  #  $  ^ =  '  " { } ; \

===============================================

echo the fee is $10

echo the fee is \$10

echo comments begin with a # character

echo "comments begin with a #character"

echo "the fee is \$10"

echo the fee is '$'10





Variables
The .profile or .bash_profile files in your home directory. These files are used to set environmental items for a users shell.
/etc/profile file is not very different however it is used to set system wide environmental variables on users shells.
/etc/profile.d
In addition to the setting environmental items the /etc/profile will execute the scripts within /etc/profile.d/*.sh. If you plan on setting your own system wide environmental variables it is recommended to place your configuration in a shell script within /etc/profile.d.

.bashrc file in your home directory. This file is meant for setting command aliases and functions used by bash shell users.
 The /etc/bashrc is setting command aliases  in system wide 




